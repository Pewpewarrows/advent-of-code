defmodule Day13Test do
  use ExUnit.Case
  doctest AdventOfCode.Day13

  test "simple" do
    input_data = """
    [1,1,3,1,1]
    [1,1,5,1,1]

    [[1],[2,3,4]]
    [[1],4]

    [9]
    [[8,7,6]]

    [[4,4],4,4]
    [[4,4],4,4,4]

    [7,7,7,7]
    [7,7,7]

    []
    [3]

    [[[]]]
    [[]]

    [1,[2,[3,[4,[5,6,7]]]],8,9]
    [1,[2,[3,[4,[5,6,0]]]],8,9]
    """
    packets = [
      [1,1,3,1,1],
      [1,1,5,1,1],
      [[1],[2,3,4]],
      [[1],4],
      [9],
      [[8,7,6]],
      [[4,4],4,4],
      [[4,4],4,4,4],
      [7,7,7,7],
      [7,7,7],
      [],
      [3],
      [[[]]],
      [[]],
      [1,[2,[3,[4,[5,6,7]]]],8,9],
      [1,[2,[3,[4,[5,6,0]]]],8,9],
    ]
    # packet_pairs = [
    #   {[1,1,3,1,1], [1,1,5,1,1]},
    #   {[[1],[2,3,4]], [[1],4]},
    #   {[9], [[8,7,6]]},
    #   {[[4,4],4,4], [[4,4],4,4,4]},
    #   {[7,7,7,7], [7,7,7]},
    #   {[], [3]},
    #   {[[[]]], [[]]},
    #   {[1,[2,[3,[4,[5,6,7]]]],8,9], [1,[2,[3,[4,[5,6,0]]]],8,9]},
    # ]

    assert AdventOfCode.Day13.packets_from_input_data(input_data) == packets
    assert AdventOfCode.Day13.sum_index_pairs_right_order(packets) == 13
    assert AdventOfCode.Day13.distress_signal_decoder_key(packets) == 140
  end
end
